parameter (or (or (or (address %set_admin)
                      (unit %accept_admin))
                  (or (list %add_maintainers address)
                      (or (list %remove_maintainers address)
                          (pair %configure (pair (nat %expireTime)
                                                 (nat %voteDelay))
                                           (nat %quorumThreshold)
                                           (nat %minimumBalance)))))
              (or (pair %propose (string :proposal_uri)
                                 (list :choices string))
                  (or (pair %vote (string :proposal_uri)
                                  (nat :choice_index))
                      (list %verify_min_balance (pair (pair %request 
                                                                     (address %owner)
                                                                     (nat %token_id))
                                                      (nat %balance))))));
storage (pair (pair (pair (address %admin)
                          (address %adminCandidate))
                    (big_map %maintainers address
                                          unit)
                    (pair %configuration (pair (nat %expireTime)
                                               (nat %voteDelay))
                                         (nat %quorumThreshold)
                                         (nat %minimumBalance)))
              (pair (pair %FA2Config (address %fa2Addr)
                                     (nat %fa2TokenId))
                    (big_map %proposals (string :proposal_uri)
                                        (pair (pair (nat %level)
                                                    (timestamp %startsAt))
                                              (timestamp %expiresAt)
                                              (nat %quorumThreshold)
                                              (list %choices string))))
              (big_map %votes (pair (string :proposal_uri)
                                    (address :voter_address))
                              (nat :vote_choice))
              (big_map %metadata string
                                 bytes));
code { CAST (pair (or (or (or address unit) (or (list address) (or (list address) (pair (pair nat nat) nat nat)))) (or (pair string (list string)) (or (pair string nat) (list (pair (pair address nat) nat))))) (pair (pair address address) (big_map address unit) (pair nat nat) nat nat) (pair (pair address nat) (big_map string (pair (pair nat timestamp) timestamp nat (list string)))) (big_map (pair string address) nat) (big_map string bytes));
       NIL operation;
       SWAP;
       UNPAIR;
       DIP { UNPAIR;
             DIP { UNPAIR;
                   DIP { UNPAIR };
                   UNPAIR };
             UNPAIR;
             DIP { UNPAIR };
             UNPAIR;
             DIP 3
                 { DIP { UNPAIR };
                   UNPAIR;
                   DIP { UNPAIR };
                   UNPAIR } };
       DUP;
       IF_LEFT { DUP;
                 IF_LEFT { IF_LEFT { DUP 4;
                                     SENDER;
                                     COMPARE;
                                     NEQ;
                                     IF { PUSH string "SenderIsNotAdmin_";
                                          FAILWITH }
                                        {  };
                                     DIP 4
                                         { DROP };
                                     DUG 3 }
                                   { DUP 5;
                                     DUP;
                                     SENDER;
                                     COMPARE;
                                     NEQ;
                                     IF { PUSH string "SenderIsNotAdminCandidate";
                                          FAILWITH }
                                        {  };
                                     DIP 4
                                         { DROP };
                                     DUG 3;
                                     DROP } }
                         { IF_LEFT { DUP 4;
                                     SENDER;
                                     COMPARE;
                                     NEQ;
                                     IF { PUSH string "SenderIsNotAdmin_";
                                          FAILWITH }
                                        {  };
                                     DUP 6;
                                     DUP 2;
                                     ITER { DUP 2;
                                            UNIT;
                                            SOME;
                                            DUP 3;
                                            UPDATE;
                                            DIP 2
                                                { DROP };
                                            SWAP;
                                            DROP };
                                     DIP 6
                                         { DROP };
                                     DUG 5;
                                     DROP }
                                   { IF_LEFT { DUP 4;
                                               SENDER;
                                               COMPARE;
                                               NEQ;
                                               IF { PUSH string "SenderIsNotAdmin_";
                                                    FAILWITH }
                                                  {  };
                                               DUP 6;
                                               DUP 2;
                                               ITER { DUP 2;
                                                      NONE unit;
                                                      DUP 3;
                                                      UPDATE;
                                                      DIP 2
                                                          { DROP };
                                                      SWAP;
                                                      DROP };
                                               DIP 6
                                                   { DROP };
                                               DUG 5;
                                               DROP }
                                             { DUP 6;
                                               SENDER;
                                               MEM;
                                               IF {  }
                                                  { PUSH string "SenderIsNotMaintainer";
                                                    FAILWITH };
                                               DUP;
                                               UNPAIR;
                                               DIP { UNPAIR };
                                               UNPAIR;
                                               DIP 10
                                                   { DROP 4 };
                                               DUG 9;
                                               DUG 9;
                                               DUG 9;
                                               DUG 9;
                                               DROP } } };
                 DROP }
               { DUP;
                 IF_LEFT { DUP;
                           CDR;
                           PUSH nat 0;
                           DUP 2;
                           SIZE;
                           COMPARE;
                           EQ;
                           IF { PUSH string "EmptyChoices";
                                FAILWITH }
                              {  };
                           DUP 2;
                           CAR;
                           DUP 15;
                           DUP;
                           DUP 3;
                           MEM;
                           IF { PUSH string "DuplicateProposal";
                                FAILWITH }
                              {  };
                           SELF %verify_min_balance;
                           DUP 15;
                           CONTRACT %balance_of (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))));
                           DUP;
                           IF_NONE { PUSH string "NoFA2Contract";
                                     FAILWITH }
                                   { DUP;
                                     PUSH mutez 0;
                                     NIL (pair address nat);
                                     DUP 21;
                                     SENDER;
                                     PAIR;
                                     CONS;
                                     DIP { DUP 5 };
                                     PAIR;
                                     TRANSFER_TOKENS;
                                     DUG 21;
                                     DIP 21
                                         { CONS };
                                     DROP };
                           NOW;
                           DUP 19;
                           DUP;
                           LEVEL;
                           DIP { DUP 16;
                                 INT;
                                 DUP 4;
                                 ADD };
                           PAIR;
                           DIP { DUP 15;
                                 INT;
                                 DUP 4;
                                 ADD;
                                 DIP { DUP 17;
                                       DIP { DUP 8 };
                                       PAIR };
                                 PAIR };
                           PAIR;
                           SOME;
                           DUP 8;
                           UPDATE;
                           DIP 20
                               { DROP };
                           DUG 19;
                           DROP 8 }
                         { IF_LEFT { DUP;
                                     CAR;
                                     DUP 14;
                                     DUP 2;
                                     GET;
                                     IF_NONE { PUSH string "NoSuchProposal";
                                               FAILWITH }
                                             { DUP 3;
                                               CDR;
                                               DUP 2;
                                               CDR;
                                               CDR;
                                               CDR;
                                               SIZE;
                                               DUP 2;
                                               COMPARE;
                                               GE;
                                               IF { PUSH string "NoSuchChoice";
                                                    FAILWITH }
                                                  {  };
                                               NOW;
                                               DUP 3;
                                               CAR;
                                               CDR;
                                               COMPARE;
                                               GT;
                                               IF { PUSH string "ProposalNotYetActive";
                                                    FAILWITH }
                                                  {  };
                                               NOW;
                                               DUP 3;
                                               CDR;
                                               CAR;
                                               COMPARE;
                                               LT;
                                               IF { PUSH string "ProposalExpired";
                                                    FAILWITH }
                                                  {  };
                                               DUP 17;
                                               SENDER;
                                               DUP 5;
                                               PAIR;
                                               DUP 2;
                                               DUP 2;
                                               MEM;
                                               IF { PUSH string "AlreadyVoted";
                                                    FAILWITH }
                                                  {  };
                                               DUP 2;
                                               DUP 4;
                                               SOME;
                                               DUP 3;
                                               UPDATE;
                                               DIP 19
                                                   { DROP };
                                               DUG 18;
                                               DROP 4 };
                                     DROP 2 }
                                   { DUP;
                                     ITER { DUP 11;
                                            DUP 2;
                                            CDR;
                                            COMPARE;
                                            LT;
                                            IF { PUSH string "NotEnoughTokens";
                                                 FAILWITH }
                                               {  };
                                            DROP };
                                     DROP } };
                 DROP };
       DROP;
       DIP 3
           { PAIR;
             DIP { PAIR };
             PAIR;
             DIP { PAIR } };
       PAIR;
       DIP { PAIR };
       PAIR;
       DIP { PAIR;
             DIP { PAIR };
             PAIR };
       PAIR;
       SWAP;
       PAIR };